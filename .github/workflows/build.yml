name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
  - cron: "0 10 1 * *"

jobs:
  build:
    name: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Build CLI
      run: dotnet build -c Release ./Decompiler/Decompiler.csproj

    - name: Build Library
      run: dotnet build -c Release ./ValveResourceFormat/ValveResourceFormat.csproj

    - name: Build GUI
      if: matrix.os == 'windows-latest'
      run: dotnet build -c Release ./ValveResourceFormat/ValveResourceFormat.csproj

    - name: Run tests
      run: dotnet test -v normal ./Tests/Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput='./lcov.info' /p:Include="[ValveResourceFormat*]*"

    - name: Pack nupkg
      run: dotnet pack --configuration release ValveResourceFormat/ValveResourceFormat.csproj

    - name: Publish GUI
      if: matrix.os == 'windows-latest'
      run: dotnet publish --configuration Release -p:PublishSingleFile=true --runtime win-x64 GUI/GUI.csproj

    - name: Publish Decompiler (Windows)
      if: matrix.os == 'windows-latest'
      run: dotnet publish --configuration Release -p:PublishSingleFile=true --runtime win-x64 Decompiler/Decompiler.csproj

    - name: Publish Decompiler (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: dotnet publish --configuration Release -p:PublishSingleFile=true --runtime linux-x64 Decompiler/Decompiler.csproj

    - name: Publish Decompiler (Mac)
      if: matrix.os == 'macos-latest'
      run: dotnet publish --configuration Release -p:PublishSingleFile=true --runtime osx-x64 Decompiler/Decompiler.csproj

    - name: Upload GUI
      uses: actions/upload-artifact@v2
      if: matrix.os == 'windows-latest'
      with:
        name: VRF-GUI
        path: GUI/bin/Release/win-x64/publish

    - name: Upload nupkg
      uses: actions/upload-artifact@v2
      if: matrix.os == 'windows-latest'
      with:
        name: nupkg
        path: 'ValveResourceFormat/bin/Release/*.nupkg'

    - name: Upload Decompiler (Windows)
      uses: actions/upload-artifact@v2
      if: matrix.os == 'windows-latest'
      with:
        name: Decompiler-windows
        path: Decompiler/bin/Release/win-x64/publish

    - name: Upload Decompiler (Linux)
      uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-latest'
      with:
        name: Decompiler-linux
        path: Decompiler/bin/Release/linux-x64/publish

    - name: Upload Decompiler (Mac)
      uses: actions/upload-artifact@v2
      if: matrix.os == 'macos-latest'
      with:
        name: Decompiler-macos
        path: Decompiler/bin/Release/osx-x64/publish

    - name: Upload test coverage
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./Tests/lcov.info
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Display artifacts folder structure
      run: ls -Rl
      working-directory: artifacts

    - name: Create release files
      run: |
       mkdir release
       chmod +x artifacts/Decompiler-linux/Decompiler
       chmod +x artifacts/Decompiler-macos/Decompiler
       zip -9j release/Decompiler-windows.zip artifacts/Decompiler-windows/*
       zip -9j release/Decompiler-linux.zip artifacts/Decompiler-linux/*
       zip -9j release/Decompiler-macos.zip artifacts/Decompiler-macos/*
       mv artifacts/VRF-GUI/VRF.exe release/
       mv artifacts/nupkg/*.nupkg release/

    - name: Display structure of archived files
      run: ls -Rl
      working-directory: release

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
